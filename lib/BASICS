#/usr/bin/bash


Vert='\[\033[1;32m' 

# Define some colors first:
BLACK='\e[0;30m'

red='\e[0;31m'
RED='\e[1;31m'

green='\e[0;32m'
GREEN='\e[1;32m'

yellow='\e[0;33m'
YELLOW='\e[1;33m'

blue='\e[0;34m'
BLUE='\e[1;34m'

pink='\e[0;35m'
PINK='\e[1;35m'

cyan='\e[0;36m'
CYAN='\e[1;36m'

# 37 White

NC='\e[0m' # No Color



    usage() {
	echo >&2 "Usage: `basename $0` [-f jpeg|sample|normal] [-e mov|flv] [-d] [file|folder]"
    }


box() {
    str="$@"
    len=$((${#str}+4))
    for i in $(seq $len); do echo -n '#'; done;
    echo; echo "# "$str" #";
    for i in $(seq $len); do echo -n '#'; done;
    echo
}





timeout(){
command=$1
# run $command in background, sleep for our timeout then kill the process if it is running
$command &
pid=$!
echo "sleep $2; kill $pid" | at now
wait $pid &> /dev/null
		if [ $? -eq 143 ]
		then
		echo "WARNING - command was terminated - timeout of $2 secs reached ($pid)$?."
		echo
		fi
}


floor16 () {
echo " $1 / 16 * 16" | bc
}
round16() {
echo "($1 + 8) / 16 * 16" | bc
}
    
ceil16() {
echo "($1 + 15) / 16 * 16" | bc
}

floor8() {
echo "$1 / 8 * 8" | bc
}

round8() {
echo "($1 + 4) / 8 * 8" | bc
}

ceil8() {
echo "($1 + 7) / 8 * 8" | bc
}

round2 () {
echo "($1 + 1) / 2 * 2" | bc
}

floor2 () {
echo "$1  / 2 * 2" | bc
}


get_vbitrate_mplayer () {	
# Return VBITERATE_MPLAYER=VBITERATE_MPLAYER=4324320   or  (90 %  $BITERATE_CALC )

#echo "get the video bitrate from mplayer"
VBITERATE_MPLAYER=`mplayer  $INPUT  -frames 0 -identify -quiet -vo null -ao null  2>&1 |grep  "ID_VIDEO_BITRATE=" |tail -1`   
VBITERATE_MPLAYER=${VBITERATE_MPLAYER#ID_VIDEO_BITRATE=}

		# check the value != null
		
		if [[ -z $VBITERATE_MPLAYER || $VBITERATE_MPLAYER == 0 ]] 
		then
		VBITERATE_MPLAYER=`echo "$BITERATE_CALC  * 100 / 90" |bc`
		fi


#echo "VBITERATE_MPLAYER=$VBITERATE_MPLAYER"
}


get_abitrate_mplayer () {	      
#echo  get the audio bitrate from mplayer
ABITERATE_MPLAYER=`mplayer  $INPUT  -frames 0 -identify -quiet -vo null -ao null  2>&1 |grep  "ID_AUDIO_BITRATE=" |tail -1`   ABITERATE_MPLAYER=${ABITERATE_MPLAYER#ID_AUDIO_BITRATE=}

		# check the value != null
		
		if [[   -z $ABITERATE_MPLAYER ||  $VBITERATE_MPLAYER == 0 ]] 
		then
		ABITERATE_MPLAYER=0
		fi

#echo "ABITERATE_MPLAYER=$ABITERATE_MPLAYER"
}


get_fps_mplayer () {	

# get the FPS from mplayer
FPS_MPLAYER=`mplayer  $INPUT  -frames 0 -identify -quiet -vo null -ao null  2>&1 |grep  "ID_VIDEO_FPS=" |tail -1`   
FPS_MPLAYER=${FPS_MPLAYER#ID_VIDEO_FPS=}
#echo "FPS_MPLAYER=$FPS_MPLAYER"
}


get_duration_mplayer () {	
# return  DURATION_MPLAYER=0 or DURATION_MPLAYER=345.78

# echo " get the DURATION from mplayer"
DURATION_MPLAYER=`mplayer  $INPUT  -frames 0 -identify -quiet -vo null -ao null  2>&1 |grep  "ID_LENGTH=" |tail -1`   

		# check the value != null
		if [[  ! -z $DURATION_MPLAYER ||  $DURATION_MPLAYER != 0 ]] 
		then
		DURATION_MPLAYER=${DURATION_MPLAYER#ID_LENGTH=}
		else
		DURATION_MPLAYER=0
		fi

#echo "DURATION_MPLAYER=$DURATION_MPLAYER"
}




